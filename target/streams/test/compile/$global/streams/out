[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingAlgTest.scala:89:18: value traceRay is not a member of domain.TracingAlg[0m
[0m[[0m[31merror[0m] [0m[0m      testObject.traceRay([0m
[0m[[0m[31merror[0m] [0m[0m                 ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingAlgTest.scala:90:9: not found: value initialRay[0m
[0m[[0m[31merror[0m] [0m[0m        initialRay = Ray(CartesianVector.Origin, CartesianVector.toUnitVector(0, 1, 0)),[0m
[0m[[0m[31merror[0m] [0m[0m        ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingAlgTest.scala:91:9: not found: value lightSource[0m
[0m[[0m[31merror[0m] [0m[0m        lightSource = LightSource(CartesianVector(-6, 0, 0), NonNegativeNumber.Zero),[0m
[0m[[0m[31merror[0m] [0m[0m        ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingAlgTest.scala:92:9: not found: value objects[0m
[0m[[0m[31merror[0m] [0m[0m        objects = sphere,[0m
[0m[[0m[31merror[0m] [0m[0m        ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingAlgTest.scala:93:24: reassignment to val[0m
[0m[[0m[31merror[0m] [0m[0m        renderSettings = renderSettings[0m
[0m[[0m[31merror[0m] [0m[0m                       ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/model/EllipseTest.scala:12:22: not enough arguments for method apply: (centre: domain.maths.CartesianVector, axis0Length: domain.maths.PositiveNumber, axis1Length: domain.maths.PositiveNumber, horizontalTurn: domain.maths.Radians, verticalTilt: domain.maths.Radians, reflectivity: domain.maths.Proportion, transparency: domain.maths.Proportion, colour: domain.model.Colour)domain.model.Ellipse in object Ellipse.[0m
[0m[[0m[31merror[0m] [0m[0mUnspecified value parameter colour.[0m
[0m[[0m[31merror[0m] [0m[0m    val toZ = Ellipse(Origin, One, One, Radians.Zero, Radians.Zero, Proportion.Zero, Colour.Black)[0m
[0m[[0m[31merror[0m] [0m[0m                     ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/model/EllipseTest.scala:13:22: not enough arguments for method apply: (centre: domain.maths.CartesianVector, axis0Length: domain.maths.PositiveNumber, axis1Length: domain.maths.PositiveNumber, horizontalTurn: domain.maths.Radians, verticalTilt: domain.maths.Radians, reflectivity: domain.maths.Proportion, transparency: domain.maths.Proportion, colour: domain.model.Colour)domain.model.Ellipse in object Ellipse.[0m
[0m[[0m[31merror[0m] [0m[0mUnspecified value parameter colour.[0m
[0m[[0m[31merror[0m] [0m[0m    val toX = Ellipse(Origin, One, One, Radians.Zero, Radians.QuarterTurn, Proportion.Zero, Colour.Black)[0m
[0m[[0m[31merror[0m] [0m[0m                     ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/model/EllipseTest.scala:14:22: not enough arguments for method apply: (centre: domain.maths.CartesianVector, axis0Length: domain.maths.PositiveNumber, axis1Length: domain.maths.PositiveNumber, horizontalTurn: domain.maths.Radians, verticalTilt: domain.maths.Radians, reflectivity: domain.maths.Proportion, transparency: domain.maths.Proportion, colour: domain.model.Colour)domain.model.Ellipse in object Ellipse.[0m
[0m[[0m[31merror[0m] [0m[0mUnspecified value parameter colour.[0m
[0m[[0m[31merror[0m] [0m[0m    val toY = Ellipse(Origin, One, One, Radians.QuarterTurn, Radians.QuarterTurn, Proportion.Zero, Colour.Black)[0m
[0m[[0m[31merror[0m] [0m[0m                     ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/model/EllipseTest.scala:15:30: not enough arguments for method apply: (centre: domain.maths.CartesianVector, axis0Length: domain.maths.PositiveNumber, axis1Length: domain.maths.PositiveNumber, horizontalTurn: domain.maths.Radians, verticalTilt: domain.maths.Radians, reflectivity: domain.maths.Proportion, transparency: domain.maths.Proportion, colour: domain.model.Colour)domain.model.Ellipse in object Ellipse.[0m
[0m[[0m[31merror[0m] [0m[0mUnspecified value parameter colour.[0m
[0m[[0m[31merror[0m] [0m[0m    val toNegativeX = Ellipse(Origin, One, One, Radians.HalfTurn, Radians.QuarterTurn, Proportion.Zero, Colour.Black)[0m
[0m[[0m[31merror[0m] [0m[0m                             ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/model/EllipseTest.scala:16:30: not enough arguments for method apply: (centre: domain.maths.CartesianVector, axis0Length: domain.maths.PositiveNumber, axis1Length: domain.maths.PositiveNumber, horizontalTurn: domain.maths.Radians, verticalTilt: domain.maths.Radians, reflectivity: domain.maths.Proportion, transparency: domain.maths.Proportion, colour: domain.model.Colour)domain.model.Ellipse in object Ellipse.[0m
[0m[[0m[31merror[0m] [0m[0mUnspecified value parameter colour.[0m
[0m[[0m[31merror[0m] [0m[0m    val toNegativeY = Ellipse(Origin, One, One, Radians.ThreeQuarterTurn, Radians.QuarterTurn, Proportion.Zero, Colour.Black)[0m
[0m[[0m[31merror[0m] [0m[0m                             ^[0m
[0m[[0m[31merror[0m] [0m[0m10 errors found[0m
