[0m[[0m[0mdebug[0m] [0m[0mThe domain.RandomAlg has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(RandomAlg,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(randomDouble,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(randomNonNegativeDouble,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) domain.RandomAlg: Set(test.TestRandom); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from test.TestRandom...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(test.TestRandom)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(test.TestRandom)[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of domain.TracingAlgTest: Set(UsedName(RandomAlg,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) domain.RandomAlg.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of domain.TracingAlgTest: Set(UsedName(RandomAlg,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of test.TestRandom: Set(UsedName(RandomAlg,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe domain.PhysicsAlg$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(contact,[Default]), UsedName(PhysicsAlg,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) domain.PhysicsAlg$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) domain.PhysicsAlg$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of domain.PhysicsAlgTest: Set(UsedName(contact,[Default]), UsedName(PhysicsAlg,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe domain.TracingAlg$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(TracingAlg,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(castRay,[Default]), UsedName(domain;TracingAlg;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(hashCode,[Default]), UsedName(random,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) domain.TracingAlg$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) domain.TracingAlg$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of domain.TracingAlgTest: Set(UsedName(TracingAlg,[Default]), UsedName(==,[Default]), UsedName(castRay,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingAlgTest.scala, /Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/PhysicsAlgTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/PhysicsTest.scala, /Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/test/TestRandom.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(domain.RandomAlg,ModifiedNames(changes = UsedName(RandomAlg,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(randomDouble,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(randomNonNegativeDouble,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]))), NamesChange(domain.PhysicsAlg$,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(contact,[Default]), UsedName(PhysicsAlg,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]))), NamesChange(domain.TracingAlg$,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(TracingAlg,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(castRay,[Default]), UsedName(domain;TracingAlg;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(hashCode,[Default]), UsedName(random,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(domain.TracingAlgTest, domain.PhysicsAlgTest, test.TestRandom)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(test.TestRandom, domain.TracingAlgTest, domain.PhysicsAlgTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(domain.TracingAlgTest, domain.PhysicsAlgTest, test.TestRandom)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/PhysicsTest.scala, /Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/domain/TracingTest.scala, /Users/PhillipKeen/dev/experiments/ray-tracing/src/test/scala/test/TestRandom.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 3 Scala sources to /Users/PhillipKeen/dev/experiments/ray-tracing/target/scala-2.12/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 15e14381 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/classes:/Users/PhillipKeen/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/PhillipKeen/dev/experiments/ray-tracing/target/scala-2.12/test-classes:/Users/PhillipKeen/dev/experiments/ray-tracing/target/scala-2.12/classes:/Users/PhillipKeen/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.5.jar:/Users/PhillipKeen/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.5.jar:/Users/PhillipKeen/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.12.8.jar:/Users/PhillipKeen/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.148131755 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from domain.TracingTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(domain.TracingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(domain.TracingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(domain.TracingTest,ModifiedNames(changes = UsedName(CheckingEqualizer,[Default]), UsedName(assume,[Default]), UsedName(assert,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(!==,[Default]), UsedName(finalize,[Default]), UsedName(tags,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(execute$default$1,[Default]), UsedName(note,[Default]), UsedName(markup,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(rerunner,[Default]), UsedName(===,[Default]), UsedName(styleName,[Default]), UsedName(intercept,[Default]), UsedName(execute$default$2,[Default]), UsedName(testDataFor,[Default]), UsedName(runNestedSuites,[Default]), UsedName(nestedSuites,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(runTest,[Default]), UsedName(clone,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(assertThrows,[Default]), UsedName(createCatchReporter,[Default]), UsedName(defaultEquality,[Default]), UsedName(==,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(suiteName,[Default]), UsedName(run,[Default]), UsedName(alert,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(fail,[Default]), UsedName(execute,[Default]), UsedName(registerTest,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(execute$default$6,[Default]), UsedName(execute$default$5,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(info,[Default]), UsedName(testsFor,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(!=,[Default]), UsedName(pending,[Default]), UsedName(succeed,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(TracingTest,[Default]), UsedName(NoArgTest,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testNames,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(cancel,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(suiteId,[Default]), UsedName(newTestCanceledException,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(execute$default$3,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(assertTypeError,[Default]), UsedName(notifyAll,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(execute$default$7,[Default]), UsedName(expectedTestCount,[Default]), UsedName(domain;TracingTest;init;,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(execute$default$4,[Default]), UsedName(trap,[Default]), UsedName(eq,[Default]), UsedName(test,[Default]), UsedName(testObject,[Default]), UsedName(wait,[Default]), UsedName(assertionsHelper,[Default]), UsedName(withClue,[Default]), UsedName(assertCompiles,[Default]), UsedName(assertResult,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(Equalizer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(ignore,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(runTests,[Default]))) invalidates 1 classes due to The domain.TracingTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToEqualizer,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(domain.TracingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from test.TestRandom...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(test.TestRandom)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(test.TestRandom)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of domain.TracingTest: Set(UsedName(TestRandom,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(test.TestRandom,ModifiedNames(changes = UsedName(TestRandom,[Default]))) invalidates 2 classes due to The test.TestRandom has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(TestRandom,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(test.TestRandom)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(domain.TracingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from domain.TracingAlgTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(domain.TracingAlgTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(domain.TracingAlgTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(domain.TracingAlgTest,ModifiedNames(changes = UsedName(TracingAlgTest,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(assume,[Default]), UsedName(assert,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(!==,[Default]), UsedName(finalize,[Default]), UsedName(tags,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(execute$default$1,[Default]), UsedName(note,[Default]), UsedName(markup,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(rerunner,[Default]), UsedName(===,[Default]), UsedName(styleName,[Default]), UsedName(intercept,[Default]), UsedName(execute$default$2,[Default]), UsedName(testDataFor,[Default]), UsedName(runNestedSuites,[Default]), UsedName(nestedSuites,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(runTest,[Default]), UsedName(clone,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(assertThrows,[Default]), UsedName(createCatchReporter,[Default]), UsedName(defaultEquality,[Default]), UsedName(==,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(suiteName,[Default]), UsedName(run,[Default]), UsedName(alert,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(fail,[Default]), UsedName(execute,[Default]), UsedName(registerTest,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(execute$default$6,[Default]), UsedName(execute$default$5,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(info,[Default]), UsedName(testsFor,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(!=,[Default]), UsedName(pending,[Default]), UsedName(succeed,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(NoArgTest,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testNames,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(cancel,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(suiteId,[Default]), UsedName(newTestCanceledException,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(execute$default$3,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(assertTypeError,[Default]), UsedName(notifyAll,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(execute$default$7,[Default]), UsedName(expectedTestCount,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(execute$default$4,[Default]), UsedName(trap,[Default]), UsedName(eq,[Default]), UsedName(test,[Default]), UsedName(testObject,[Default]), UsedName(wait,[Default]), UsedName(assertionsHelper,[Default]), UsedName(withClue,[Default]), UsedName(assertCompiles,[Default]), UsedName(assertResult,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(domain;TracingAlgTest;init;,[Default]), UsedName(Equalizer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(ignore,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(runTests,[Default]))) invalidates 1 classes due to The domain.TracingAlgTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToEqualizer,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(domain.TracingAlgTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from domain.PhysicsAlgTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(domain.PhysicsAlgTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(domain.PhysicsAlgTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(domain.PhysicsAlgTest,ModifiedNames(changes = UsedName(CheckingEqualizer,[Default]), UsedName(assume,[Default]), UsedName(assert,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(!==,[Default]), UsedName(finalize,[Default]), UsedName(tags,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(execute$default$1,[Default]), UsedName(PhysicsAlgTest,[Default]), UsedName(note,[Default]), UsedName(markup,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(rerunner,[Default]), UsedName(===,[Default]), UsedName(styleName,[Default]), UsedName(intercept,[Default]), UsedName(execute$default$2,[Default]), UsedName(testDataFor,[Default]), UsedName(runNestedSuites,[Default]), UsedName(nestedSuites,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(runTest,[Default]), UsedName(clone,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(assertThrows,[Default]), UsedName(createCatchReporter,[Default]), UsedName(defaultEquality,[Default]), UsedName(==,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(suiteName,[Default]), UsedName(run,[Default]), UsedName(alert,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(fail,[Default]), UsedName(execute,[Default]), UsedName(domain;PhysicsAlgTest;init;,[Default]), UsedName(registerTest,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(execute$default$6,[Default]), UsedName(execute$default$5,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(info,[Default]), UsedName(testsFor,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(!=,[Default]), UsedName(pending,[Default]), UsedName(succeed,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(NoArgTest,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testNames,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(cancel,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(suiteId,[Default]), UsedName(newTestCanceledException,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(execute$default$3,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(assertTypeError,[Default]), UsedName(notifyAll,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(execute$default$7,[Default]), UsedName(expectedTestCount,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(execute$default$4,[Default]), UsedName(trap,[Default]), UsedName(eq,[Default]), UsedName(test,[Default]), UsedName(wait,[Default]), UsedName(assertionsHelper,[Default]), UsedName(withClue,[Default]), UsedName(assertCompiles,[Default]), UsedName(assertResult,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(Equalizer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(ignore,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(runTests,[Default]))) invalidates 1 classes due to The domain.PhysicsAlgTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToEqualizer,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(domain.PhysicsAlgTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from domain.PhysicsTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(domain.PhysicsTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(domain.PhysicsTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(domain.PhysicsTest,ModifiedNames(changes = UsedName(CheckingEqualizer,[Default]), UsedName(assume,[Default]), UsedName(assert,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(!==,[Default]), UsedName(finalize,[Default]), UsedName(tags,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(execute$default$1,[Default]), UsedName(note,[Default]), UsedName(markup,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(rerunner,[Default]), UsedName(===,[Default]), UsedName(styleName,[Default]), UsedName(intercept,[Default]), UsedName(execute$default$2,[Default]), UsedName(testDataFor,[Default]), UsedName(runNestedSuites,[Default]), UsedName(nestedSuites,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(runTest,[Default]), UsedName(clone,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(assertThrows,[Default]), UsedName(createCatchReporter,[Default]), UsedName(defaultEquality,[Default]), UsedName(==,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(suiteName,[Default]), UsedName(run,[Default]), UsedName(alert,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(fail,[Default]), UsedName(execute,[Default]), UsedName(registerTest,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(execute$default$6,[Default]), UsedName(execute$default$5,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(info,[Default]), UsedName(testsFor,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(!=,[Default]), UsedName(pending,[Default]), UsedName(succeed,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(NoArgTest,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testNames,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(cancel,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(suiteId,[Default]), UsedName(newTestCanceledException,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(execute$default$3,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(assertTypeError,[Default]), UsedName(notifyAll,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(execute$default$7,[Default]), UsedName(expectedTestCount,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(execute$default$4,[Default]), UsedName(trap,[Default]), UsedName(domain;PhysicsTest;init;,[Default]), UsedName(eq,[Default]), UsedName(test,[Default]), UsedName(wait,[Default]), UsedName(assertionsHelper,[Default]), UsedName(withClue,[Default]), UsedName(assertCompiles,[Default]), UsedName(assertResult,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(PhysicsTest,[Default]), UsedName(Equalizer,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(ignore,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(runTests,[Default]))) invalidates 1 classes due to The domain.PhysicsTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToEqualizer,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(domain.PhysicsTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
